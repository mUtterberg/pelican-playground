<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>My Pelican Playground</title><link href="https://datadev.me/pelican-playground/" rel="alternate"></link><link href="https://datadev.me/pelican-playground/feeds/all.atom.xml" rel="self"></link><id>https://datadev.me/pelican-playground/</id><updated>2018-09-11T13:20:00-04:00</updated><entry><title>Automating-Pelican-Travis-CI</title><link href="https://datadev.me/pelican-playground/automating-pelican-travis-ci.html" rel="alternate"></link><published>2018-09-11T13:20:00-04:00</published><updated>2018-09-11T13:20:00-04:00</updated><author><name>Marissa Utterberg</name></author><id>tag:datadev.me,2018-09-11:/pelican-playground/automating-pelican-travis-ci.html</id><summary type="html">&lt;h1&gt;Automating Pelican builds with Travis-CI&lt;/h1&gt;
&lt;p&gt;Make sure to escape special characters for bash. The format $"GITHUB_TOKEN" is appropriate for this case.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Here are the formats I tried. Notice that GITHUB_TOKEN also passes successfully, but we need the $ for build success in bash." src="images/EnvVars.png"&gt;&lt;/p&gt;
&lt;p&gt;I referred to &lt;a href="https://docs.travis-ci.com/user/deployment/pages/"&gt;the official Travis-CI documentation&lt;/a&gt;, &lt;a href="https://blog.minchin.ca/2017/05/deploying-pelican-with-travis-to-github.html"&gt;this tutorial&lt;/a&gt; from user MinchinWeb, and his &lt;a href="https://github.com/MinchinWeb/blog.minchin.ca"&gt;corresponding source repo&lt;/a&gt; to navigate this process.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Automating Pelican builds with Travis-CI&lt;/h1&gt;
&lt;p&gt;Make sure to escape special characters for bash. The format $"GITHUB_TOKEN" is appropriate for this case.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Here are the formats I tried. Notice that GITHUB_TOKEN also passes successfully, but we need the $ for build success in bash." src="images/EnvVars.png"&gt;&lt;/p&gt;
&lt;p&gt;I referred to &lt;a href="https://docs.travis-ci.com/user/deployment/pages/"&gt;the official Travis-CI documentation&lt;/a&gt;, &lt;a href="https://blog.minchin.ca/2017/05/deploying-pelican-with-travis-to-github.html"&gt;this tutorial&lt;/a&gt; from user MinchinWeb, and his &lt;a href="https://github.com/MinchinWeb/blog.minchin.ca"&gt;corresponding source repo&lt;/a&gt; to navigate this process.&lt;/p&gt;</content></entry><entry><title>Getting Started with Pelican on GitHub Pages</title><link href="https://datadev.me/pelican-playground/getting-started-with-pelican-on-github-pages.html" rel="alternate"></link><published>2018-09-11T10:20:00-04:00</published><updated>2018-09-11T10:20:00-04:00</updated><author><name>Marissa Utterberg</name></author><id>tag:datadev.me,2018-09-11:/pelican-playground/getting-started-with-pelican-on-github-pages.html</id><summary type="html">&lt;h1&gt;Deploying a Pelican site to GitHub Pages&lt;/h1&gt;
&lt;p&gt;If your change was on GitHub in the browser, run &lt;code&gt;git pull origin master&lt;/code&gt; first. Otherwise, initiate the new build with &lt;code&gt;pelican content -o output -s publishconf.py&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;A note on deployment&lt;/h3&gt;
&lt;p&gt;Pelican settings are split between pelicanconf.py and publishconf.py - the â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Deploying a Pelican site to GitHub Pages&lt;/h1&gt;
&lt;p&gt;If your change was on GitHub in the browser, run &lt;code&gt;git pull origin master&lt;/code&gt; first. Otherwise, initiate the new build with &lt;code&gt;pelican content -o output -s publishconf.py&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;A note on deployment&lt;/h3&gt;
&lt;p&gt;Pelican settings are split between pelicanconf.py and publishconf.py - the latter of which is essentially the production settings file. &lt;a href="https://stackoverflow.com/questions/20817192/what-is-the-difference-between-pelicanconf-and-publishconf-when-using-pelican"&gt;This thread on Stack Overflow&lt;/a&gt; provides some insight from the contributor of that feature ("bifurcated settings").&lt;/p&gt;
&lt;p&gt;We pip installed ghp-import specifically for GitHub Pages, so run &lt;code&gt;ghp-import output -b gh-pages&lt;/code&gt; next. And because our Pelican source is hosted on branch master, &lt;code&gt;git push origin gh-pages&lt;/code&gt; to ensure we aren't over-writing the generator. The project page can publish from either, but we selected gh-pages in our project's settings to enable hosting both branches on GitHub.&lt;/p&gt;</content></entry></feed>